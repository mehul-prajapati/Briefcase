<!DOCTYPE html>
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!-->
<html lang="en"><!--<![endif]--><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><script async="" src="C++%20Multithreading_files/cbgapi.loaded_1"></script><script async="" src="C++%20Multithreading_files/cbgapi.loaded_0"></script><script src="C++%20Multithreading_files/auth016.js" type="text/javascript"></script><script gapi_processed="true" src="C++%20Multithreading_files/plusone.js" type="text/javascript"></script><link media="all" href="C++%20Multithreading_files/widget118.css" type="text/css" rel="stylesheet">
<meta charset="utf-8">
<title>C++ Multithreading</title>
<link rel="shortcut icon" href="http://www.tutorialspoint.com/favicon.ico" type="image/x-icon">
<meta name="Keywords" content="C++, Tutorials, Learning, Beginners, Basics, Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Interfaces, STL, Iterators, Algorithms, Exception Handling, Overloading,Templates, Namespaces, Signal Handling">
<meta name="description" content="C++ Multithreading Programming - Learning C++ in simple and easy steps : A beginner's tutorial containing complete knowledge of C++ Syntax Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Interfaces, STL, Iterators, Algorithms, Exception Handling, Overloading,Templates, Namespaces and Signal Handling">
<!-- base href="http://www.tutorialspoint.com/" -->
<meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=yes">
<script type="text/javascript" src="C++%20Multithreading_files/jquery_002.js"></script>
<script type="text/javascript" src="C++%20Multithreading_files/mobile.js"></script>
<link rel="stylesheet" type="text/css" href="C++%20Multithreading_files/style.css">
<link rel="stylesheet" type="text/css" href="C++%20Multithreading_files/prettify.css">
<script type="text/javascript" src="C++%20Multithreading_files/prettify.js"></script>
<link rel="stylesheet" type="text/css" href="C++%20Multithreading_files/colorbox.css">
<script type="text/javascript" src="C++%20Multithreading_files/jquery.js"></script>
<script type="text/javascript" src="C++%20Multithreading_files/tryit.js"></script>
<script type="text/javascript">
$(document).ready(function() {
  var tryit = new $.TryIt('/cplusplus/try_cplusplus.php');
  tryit.compile();
});
</script>
<style media="screen" type="text/css">
/* C++ Scheme */
#topmenu a:link {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:visited {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:hover {text-decoration:none;color:#d6a432 !important;background-color:transparent;font-weight:bold;}
#header{ 
background:#d6a432 !important;
}
#topmenu
{
background-color:#3b2b1e !important;
}
#leftcol ul.menu li.heading 
{
background:#d6a432 !important;
border:1px solid #3b2b1e !important;
}
#middlecol  {min-height:1600px; padding:0px;}
</style>
<script src="C++%20Multithreading_files/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="http://www.tutorialspoint.com/index.htm">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input name="sitesearch" value="www.tutorialspoint.com" type="hidden">
<input name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}" type="text">
<input value="FORID:11" name="cof" type="hidden">
<input name="ie" value="ISO-8859-1" type="hidden">
<input class="submit btn" src="C++%20Multithreading_files/icon-search.png" alt="Go" type="image">
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="mobileleft">
<a href="http://www.tutorialspoint.com/index.htm" id="home"><img src="C++%20Multithreading_files/home-icon.png"></a>
</div>
<div id="left">
<a href="http://www.tutorialspoint.com/index.htm" target="_top">HOME </a>
<a href="http://www.tutorialspoint.com/java/index.htm" target="_top">JAVA </a>
<a href="http://www.tutorialspoint.com/php/index.htm" target="_top">PHP </a>
<a href="http://www.tutorialspoint.com/python/index.htm" target="_top">Python </a>
<a href="http://www.tutorialspoint.com/ruby/index.htm" target="_top">Ruby </a>
<a href="http://www.tutorialspoint.com/perl/index.htm" target="_top">Perl </a>
<a href="http://www.tutorialspoint.com/html/index.htm" target="_top">HTML </a>
<a href="http://www.tutorialspoint.com/css/index.htm" target="_top">CSS </a>
<a href="http://www.tutorialspoint.com/javascript/index.htm" target="_top">Javascript </a>
<a href="http://www.tutorialspoint.com/mysql/index.htm" target="_top">MySQL </a>
<a href="http://www.tutorialspoint.com/cplusplus/index.htm" target="_top">C++ </a>
<a href="http://www.tutorialspoint.com/unix/index.htm" target="_top">UNIX </a>
<a href="http://www.tutorialspoint.com/more.htm" target="_top">MORE...</a>
</div>
<div id="mobileright">
<a href="#" id="pull"><img src="C++%20Multithreading_files/nav-icon.png"></a>
</div>
<div id="right">
<a href="http://www.tutorialspoint.com/references.htm" target="_top">REFERENCES</a> |
<a href="http://www.tutorialspoint.com/forums/index.php" target="_top">FORUM</a> |
<a href="http://www.tutorialspoint.com/about/index.htm" target="_top">ABOUT</a> |
<a href="http://www.tutorialspoint.com/about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div style="display: block;" id="leftcol">
<div class="mini-logo">
<img src="C++%20Multithreading_files/cpp-mini-logo.png" alt="C++ Tutorial">
</div>
<ul class="menu">
<li class="heading">C++ Basics</li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/index.htm">C++ Home</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_overview.htm">C++ Overview</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_environment_setup.htm">C++ Environment Setup</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_basic_syntax.htm">C++ Basic Syntax</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_comments.htm">C++ Comments</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_data_types.htm">C++ Data Types</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_variable_types.htm">C++  Variable Types</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_variable_scope.htm">C++  Variable Scope</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_constants_literals.htm">C++ Constants/Literals</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_modifier_types.htm">C++ Modifier Types</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_storage_classes.htm">C++ Storage Classes</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_operators.htm">C++ Operators</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_loop_types.htm">C++ Loop Types</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_decision_making.htm">C++ Decision Making </a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_functions.htm">C++ Functions</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_numbers.htm">C++ Numbers</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_arrays.htm">C++ Arrays</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_strings.htm">C++ Strings</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_pointers.htm">C++ Pointers</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_references.htm">C++ References</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_date_time.htm">C++ Date &amp; Time</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_basic_input_output.htm">C++ Basic Input/Output</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_data_structures.htm">C++ Data Structures</a></li>
</ul>
<ul class="menu">
<li class="heading">C++ Object Oriented</li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_classes_objects.htm">C++ Classes &amp; Objects</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_inheritance.htm">C++ Inheritance</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_overloading.htm">C++ Overloading</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_polymorphism.htm">C++ Polymorphism</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_data_abstraction.htm">C++ Abstraction</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_data_encapsulation.htm">C++ Encapsulation</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_interfaces.htm">C++ Interfaces</a></li>
</ul>
<ul class="menu">
<li class="heading">C++ Advanced</li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_files_streams.htm">C++ Files and Streams</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_exceptions_handling.htm">C++ Exception Handling</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_dynamic_memory.htm">C++ Dynamic Memory</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_namespaces.htm">C++ Namespaces</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_templates.htm">C++ Templates</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_preprocessor.htm">C++ Preprocessor</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_signal_handling.htm">C++ Signal Handling</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_multithreading.htm"><b>C++ Multithreading</b></a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_web_programming.htm">C++ Web Programming</a></li>
</ul>
<ul class="menu">
<li class="heading">C++ Useful Resources</li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_quick_guide.htm">C++ Quick Guide</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_stl_tutorial.htm">C++ STL Tutorial</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_standard_library.htm">C++ Standard Library</a></li>
<li><a class="left" target="_top" href="http://www.tutorialspoint.com/cplusplus/cpp_useful_resources.htm">C++ Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="http://www.tutorialspoint.com/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="http://www.tutorialspoint.com/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div style="width: 575px;" id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>C++ Multithreading</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript" src="C++%20Multithreading_files/show_ads.js"> 
</script><ins style="display:inline-table;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;" width="468" frameborder="0" height="60" scrolling="no"></iframe></ins></ins>
</div>
<hr>
<div class="pre-btn">
<a href="http://www.tutorialspoint.com/cplusplus/cpp_signal_handling.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="http://www.tutorialspoint.com/cplusplus/cpp_web_programming.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr>
<p>Multithreading is a specialized form of multitasking and a 
multitasking is the feature that allows your computer to run two or more
 programs concurrently.  In general, there are two types of 
multitasking: process-based and thread-based.</p>
<p>Process-based multitasking handles the concurrent execution of 
programs. Thread-based multitasking deals with the concurrent execution 
of pieces of the same program.</p>
<p>A multithreaded program contains two or more parts that can run 
concurrently. Each part of such a program is called a thread, and each 
thread defines a separate path of execution.</p>
<p>C++ does not contain any built-in support for multithreaded 
applications. Instead, it relies entirely upon the operating system to 
provide this feature.</p>
<p>This tutorial assumes that you are working on Linux OS and we are 
going to write multi-threaded C++ program using POSIX. POSIX Threads, or
 Pthreads provides  API which are available on many Unix-like POSIX 
systems such as FreeBSD, NetBSD, GNU/Linux, Mac OS X and Solaris.</p>
<h2>Creating Threads:</h2>
<p>There is following routine which we use to create a POSIX thread:</p>
<pre style="" class="prettyprint prettyprinted"><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;pthread.h&gt;</span><span class="pln">
pthread_create </span><span class="pun">(</span><span class="pln">thread</span><span class="pun">,</span><span class="pln"> attr</span><span class="pun">,</span><span class="pln"> start_routine</span><span class="pun">,</span><span class="pln"> arg</span><span class="pun">)</span><span class="pln"> </span></pre>
<p>Here, <b>pthread_create</b> creates a new thread and makes it 
executable. This routine can be called any number of times from anywhere
 within your code. Here is the description of the parameters:</p>
<table class="src">
<tbody><tr><th width="25%">Parameter</th><th>Description</th></tr>
<tr><td>thread</td><td>An opaque, unique identifier for the new thread returned by the subroutine.</td></tr>
<tr><td>attr</td><td>An opaque attribute object that may be used to set 
thread attributes. You can specify a thread attributes object, or NULL 
for the default values.</td></tr>
<tr><td>start_routine</td><td>The C++ routine that the thread will execute once it is created.</td></tr>
<tr><td>arg</td><td>A single argument that may be passed to 
start_routine. It must be passed by reference as a pointer cast of type 
void. NULL may be used if no argument is to be passed.</td></tr>
</tbody></table>
<p>The maximum number of threads that may be created by a process is 
implementation dependent. Once created, threads are peers, and may 
create other threads. There is no implied hierarchy or dependency 
between threads.</p>
<h2>Terminating Threads:</h2>
<p>There is following routine which we use to terminate a POSIX thread:</p>
<pre style="" class="prettyprint prettyprinted"><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;pthread.h&gt;</span><span class="pln">
pthread_exit </span><span class="pun">(</span><span class="pln">status</span><span class="pun">)</span><span class="pln"> </span></pre>
<p>Here <b>pthread_exit</b> is used to explicitly exit a thread. 
Typically, the pthread_exit() routine is called after a thread has 
completed its work and is no longer required to exist.</p>
<p>If main() finishes before the threads it has created, and exits with 
pthread_exit(), the other threads will continue to execute. Otherwise, 
they will be automatically terminated when main() finishes.</p>
<h2>Example:</h2>
<p>This simple example code creates 5 threads with the pthread_create() 
routine. Each thread prints a "Hello World!" message, and then 
terminates with a call to pthread_exit(). </p>
<pre style="" class="prettyprint tryit prettyprinted"><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;iostream&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;cstdlib&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;pthread.h&gt;</span><span class="pln">

</span><span class="kwd">using</span><span class="pln"> </span><span class="kwd">namespace</span><span class="pln"> std</span><span class="pun">;</span><span class="pln">

</span><span class="com">#define</span><span class="pln"> NUM_THREADS     </span><span class="lit">5</span><span class="pln">

</span><span class="kwd">void</span><span class="pln"> </span><span class="pun">*</span><span class="typ">PrintHello</span><span class="pun">(</span><span class="kwd">void</span><span class="pln"> </span><span class="pun">*</span><span class="pln">threadid</span><span class="pun">)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">long</span><span class="pln"> tid</span><span class="pun">;</span><span class="pln">
   tid </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">long</span><span class="pun">)</span><span class="pln">threadid</span><span class="pun">;</span><span class="pln">
   cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Hello World! Thread ID, "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> tid </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">
   pthread_exit</span><span class="pun">(</span><span class="pln">NULL</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">int</span><span class="pln"> main </span><span class="pun">()</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
   </span><span class="typ">pthread_t</span><span class="pln"> threads</span><span class="pun">[</span><span class="pln">NUM_THREADS</span><span class="pun">];</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln"> rc</span><span class="pun">;</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">;</span><span class="pln">
   </span><span class="kwd">for</span><span class="pun">(</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> NUM_THREADS</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++</span><span class="pln"> </span><span class="pun">){</span><span class="pln">
      cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"main() : creating thread, "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> i </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">
      rc </span><span class="pun">=</span><span class="pln"> pthread_create</span><span class="pun">(&amp;</span><span class="pln">threads</span><span class="pun">[</span><span class="pln">i</span><span class="pun">],</span><span class="pln"> NULL</span><span class="pun">,</span><span class="pln"> 
                          </span><span class="typ">PrintHello</span><span class="pun">,</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pln"> </span><span class="pun">*)</span><span class="pln">i</span><span class="pun">);</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">rc</span><span class="pun">){</span><span class="pln">
         cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Error:unable to create thread,"</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> rc </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">
         </span><span class="kwd">exit</span><span class="pun">(-</span><span class="lit">1</span><span class="pun">);</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   pthread_exit</span><span class="pun">(</span><span class="pln">NULL</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre>
<p>Compile the following program using -lpthread library as follows:</p>
<pre style="" class="prettyprint prettyprinted"><span class="pln">$gcc test</span><span class="pun">.</span><span class="pln">cpp </span><span class="pun">-</span><span class="pln">lpthread</span></pre>
<p>Now, execute your program which should generate result something as follows:</p>
<pre style="" class="prettyprint prettyprinted"><span class="pln">main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln">
main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pln">
main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pln">
main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pln">
main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pln">
</span><span class="typ">Hello</span><span class="pln"> </span><span class="typ">World</span><span class="pun">!</span><span class="pln"> </span><span class="typ">Thread</span><span class="pln"> ID</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln">
</span><span class="typ">Hello</span><span class="pln"> </span><span class="typ">World</span><span class="pun">!</span><span class="pln"> </span><span class="typ">Thread</span><span class="pln"> ID</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pln">
</span><span class="typ">Hello</span><span class="pln"> </span><span class="typ">World</span><span class="pun">!</span><span class="pln"> </span><span class="typ">Thread</span><span class="pln"> ID</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pln">
</span><span class="typ">Hello</span><span class="pln"> </span><span class="typ">World</span><span class="pun">!</span><span class="pln"> </span><span class="typ">Thread</span><span class="pln"> ID</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pln">
</span><span class="typ">Hello</span><span class="pln"> </span><span class="typ">World</span><span class="pun">!</span><span class="pln"> </span><span class="typ">Thread</span><span class="pln"> ID</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span></pre>
<h2>Passing Arguments to Threads:</h2>
<p>This example shows how to pass multiple arguments via a structure. 
You can pass any data type in a thread callback because it points to 
void as explained in the following example:</p>
<pre style="" class="prettyprint tryit prettyprinted"><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;iostream&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;cstdlib&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;pthread.h&gt;</span><span class="pln">

</span><span class="kwd">using</span><span class="pln"> </span><span class="kwd">namespace</span><span class="pln"> std</span><span class="pun">;</span><span class="pln">

</span><span class="com">#define</span><span class="pln"> NUM_THREADS     </span><span class="lit">5</span><span class="pln">

</span><span class="kwd">struct</span><span class="pln"> thread_data</span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln">  thread_id</span><span class="pun">;</span><span class="pln">
   </span><span class="kwd">char</span><span class="pln"> </span><span class="pun">*</span><span class="pln">message</span><span class="pun">;</span><span class="pln">
</span><span class="pun">};</span><span class="pln">

</span><span class="kwd">void</span><span class="pln"> </span><span class="pun">*</span><span class="typ">PrintHello</span><span class="pun">(</span><span class="kwd">void</span><span class="pln"> </span><span class="pun">*</span><span class="pln">threadarg</span><span class="pun">)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">struct</span><span class="pln"> thread_data </span><span class="pun">*</span><span class="pln">my_data</span><span class="pun">;</span><span class="pln">

   my_data </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">struct</span><span class="pln"> thread_data </span><span class="pun">*)</span><span class="pln"> threadarg</span><span class="pun">;</span><span class="pln">

   cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Thread ID : "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> my_data</span><span class="pun">-&gt;</span><span class="pln">thread_id </span><span class="pun">;</span><span class="pln">
   cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">" Message : "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> my_data</span><span class="pun">-&gt;</span><span class="pln">message </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">

   pthread_exit</span><span class="pun">(</span><span class="pln">NULL</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">int</span><span class="pln"> main </span><span class="pun">()</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
   </span><span class="typ">pthread_t</span><span class="pln"> threads</span><span class="pun">[</span><span class="pln">NUM_THREADS</span><span class="pun">];</span><span class="pln">
   </span><span class="kwd">struct</span><span class="pln"> thread_data td</span><span class="pun">[</span><span class="pln">NUM_THREADS</span><span class="pun">];</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln"> rc</span><span class="pun">;</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">;</span><span class="pln">

   </span><span class="kwd">for</span><span class="pun">(</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> NUM_THREADS</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++</span><span class="pln"> </span><span class="pun">){</span><span class="pln">
      cout </span><span class="pun">&lt;&lt;</span><span class="str">"main() : creating thread, "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> i </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">
      td</span><span class="pun">[</span><span class="pln">i</span><span class="pun">].</span><span class="pln">thread_id </span><span class="pun">=</span><span class="pln"> i</span><span class="pun">;</span><span class="pln">
      td</span><span class="pun">[</span><span class="pln">i</span><span class="pun">].</span><span class="pln">message </span><span class="pun">=</span><span class="pln"> </span><span class="str">"This is message"</span><span class="pun">;</span><span class="pln">
      rc </span><span class="pun">=</span><span class="pln"> pthread_create</span><span class="pun">(&amp;</span><span class="pln">threads</span><span class="pun">[</span><span class="pln">i</span><span class="pun">],</span><span class="pln"> NULL</span><span class="pun">,</span><span class="pln">
                          </span><span class="typ">PrintHello</span><span class="pun">,</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pln"> </span><span class="pun">*)&amp;</span><span class="pln">td</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]);</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">rc</span><span class="pun">){</span><span class="pln">
         cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Error:unable to create thread,"</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> rc </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">
         </span><span class="kwd">exit</span><span class="pun">(-</span><span class="lit">1</span><span class="pun">);</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   pthread_exit</span><span class="pun">(</span><span class="pln">NULL</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre>
<p>When the above code is compiled and executed, it produces the following result:</p>
<pre style="" class="prettyprint prettyprinted"><span class="pln">main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln">
main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pln">
main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pln">
main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pln">
main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pln">
</span><span class="typ">Thread</span><span class="pln"> ID </span><span class="pun">:</span><span class="pln"> </span><span class="lit">3</span><span class="pln"> </span><span class="typ">Message</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">This</span><span class="pln"> </span><span class="kwd">is</span><span class="pln"> message
</span><span class="typ">Thread</span><span class="pln"> ID </span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pln"> </span><span class="typ">Message</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">This</span><span class="pln"> </span><span class="kwd">is</span><span class="pln"> message
</span><span class="typ">Thread</span><span class="pln"> ID </span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="typ">Message</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">This</span><span class="pln"> </span><span class="kwd">is</span><span class="pln"> message
</span><span class="typ">Thread</span><span class="pln"> ID </span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="typ">Message</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">This</span><span class="pln"> </span><span class="kwd">is</span><span class="pln"> message
</span><span class="typ">Thread</span><span class="pln"> ID </span><span class="pun">:</span><span class="pln"> </span><span class="lit">4</span><span class="pln"> </span><span class="typ">Message</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">This</span><span class="pln"> </span><span class="kwd">is</span><span class="pln"> message</span></pre>
<h2>Joining and Detaching Threads:</h2>
<p>There are following two routines which we can use to join or detach threads:</p>
<pre style="" class="prettyprint prettyprinted"><span class="pln">pthread_join </span><span class="pun">(</span><span class="pln">threadid</span><span class="pun">,</span><span class="pln"> status</span><span class="pun">)</span><span class="pln"> 
pthread_detach </span><span class="pun">(</span><span class="pln">threadid</span><span class="pun">)</span><span class="pln"> </span></pre>
<p>The pthread_join() subroutine blocks the calling thread until the 
specified threadid thread terminates. When a thread is created, one of 
its attributes defines whether it is joinable or detached. Only threads 
that are created as joinable can be joined. If a thread is created as 
detached, it can never be joined.</p>
<p>This example demonstrates how to wait for thread completions by using the Pthread join routine.</p>
<pre style="" class="prettyprint tryit prettyprinted"><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;iostream&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;cstdlib&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;pthread.h&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;unistd.h&gt;</span><span class="pln">

</span><span class="kwd">using</span><span class="pln"> </span><span class="kwd">namespace</span><span class="pln"> std</span><span class="pun">;</span><span class="pln">

</span><span class="com">#define</span><span class="pln"> NUM_THREADS     </span><span class="lit">5</span><span class="pln">

</span><span class="kwd">void</span><span class="pln"> </span><span class="pun">*</span><span class="pln">wait</span><span class="pun">(</span><span class="kwd">void</span><span class="pln"> </span><span class="pun">*</span><span class="pln">t</span><span class="pun">)</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">;</span><span class="pln">
   </span><span class="kwd">long</span><span class="pln"> tid</span><span class="pun">;</span><span class="pln">

   tid </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">long</span><span class="pun">)</span><span class="pln">t</span><span class="pun">;</span><span class="pln">

   sleep</span><span class="pun">(</span><span class="lit">1</span><span class="pun">);</span><span class="pln">
   cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Sleeping in thread "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">
   cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Thread with id : "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> tid </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"  ...exiting "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">
   pthread_exit</span><span class="pun">(</span><span class="pln">NULL</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">int</span><span class="pln"> main </span><span class="pun">()</span><span class="pln">
</span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln"> rc</span><span class="pun">;</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">;</span><span class="pln">
   </span><span class="typ">pthread_t</span><span class="pln"> threads</span><span class="pun">[</span><span class="pln">NUM_THREADS</span><span class="pun">];</span><span class="pln">
   </span><span class="typ">pthread_attr_t</span><span class="pln"> attr</span><span class="pun">;</span><span class="pln">
   </span><span class="kwd">void</span><span class="pln"> </span><span class="pun">*</span><span class="pln">status</span><span class="pun">;</span><span class="pln">

   </span><span class="com">// Initialize and set thread joinable</span><span class="pln">
   pthread_attr_init</span><span class="pun">(&amp;</span><span class="pln">attr</span><span class="pun">);</span><span class="pln">
   pthread_attr_setdetachstate</span><span class="pun">(&amp;</span><span class="pln">attr</span><span class="pun">,</span><span class="pln"> PTHREAD_CREATE_JOINABLE</span><span class="pun">);</span><span class="pln">

   </span><span class="kwd">for</span><span class="pun">(</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> NUM_THREADS</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++</span><span class="pln"> </span><span class="pun">){</span><span class="pln">
      cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"main() : creating thread, "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> i </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">
      rc </span><span class="pun">=</span><span class="pln"> pthread_create</span><span class="pun">(&amp;</span><span class="pln">threads</span><span class="pun">[</span><span class="pln">i</span><span class="pun">],</span><span class="pln"> NULL</span><span class="pun">,</span><span class="pln"> wait</span><span class="pun">,</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pln"> </span><span class="pun">*)</span><span class="pln">i </span><span class="pun">);</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">rc</span><span class="pun">){</span><span class="pln">
         cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Error:unable to create thread,"</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> rc </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">
         </span><span class="kwd">exit</span><span class="pun">(-</span><span class="lit">1</span><span class="pun">);</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">

   </span><span class="com">// free attribute and wait for the other threads</span><span class="pln">
   pthread_attr_destroy</span><span class="pun">(&amp;</span><span class="pln">attr</span><span class="pun">);</span><span class="pln">
   </span><span class="kwd">for</span><span class="pun">(</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> NUM_THREADS</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++</span><span class="pln"> </span><span class="pun">){</span><span class="pln">
      rc </span><span class="pun">=</span><span class="pln"> pthread_join</span><span class="pun">(</span><span class="pln">threads</span><span class="pun">[</span><span class="pln">i</span><span class="pun">],</span><span class="pln"> </span><span class="pun">&amp;</span><span class="pln">status</span><span class="pun">);</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">rc</span><span class="pun">){</span><span class="pln">
         cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Error:unable to join,"</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> rc </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">
         </span><span class="kwd">exit</span><span class="pun">(-</span><span class="lit">1</span><span class="pun">);</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
      cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Main: completed thread id :"</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> i </span><span class="pun">;</span><span class="pln">
      cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"  exiting with status :"</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> status </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">

   cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Main: program exiting."</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln">
   pthread_exit</span><span class="pun">(</span><span class="pln">NULL</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre>
<p>When the above code is compiled and executed, it produces the following result:</p>
<pre style="" class="prettyprint prettyprinted"><span class="pln">main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln">
main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pln">
main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pln">
main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pln">
main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> creating thread</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pln">
</span><span class="typ">Sleeping</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> thread
</span><span class="typ">Thread</span><span class="pln"> </span><span class="kwd">with</span><span class="pln"> id </span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">....</span><span class="pln"> exiting
</span><span class="typ">Sleeping</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> thread
</span><span class="typ">Thread</span><span class="pln"> </span><span class="kwd">with</span><span class="pln"> id </span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">....</span><span class="pln"> exiting
</span><span class="typ">Sleeping</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> thread
</span><span class="typ">Thread</span><span class="pln"> </span><span class="kwd">with</span><span class="pln"> id </span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pln"> </span><span class="pun">....</span><span class="pln"> exiting
</span><span class="typ">Sleeping</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> thread
</span><span class="typ">Thread</span><span class="pln"> </span><span class="kwd">with</span><span class="pln"> id </span><span class="pun">:</span><span class="pln"> </span><span class="lit">3</span><span class="pln"> </span><span class="pun">....</span><span class="pln"> exiting
</span><span class="typ">Sleeping</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> thread
</span><span class="typ">Thread</span><span class="pln"> </span><span class="kwd">with</span><span class="pln"> id </span><span class="pun">:</span><span class="pln"> </span><span class="lit">4</span><span class="pln"> </span><span class="pun">....</span><span class="pln"> exiting
</span><span class="typ">Main</span><span class="pun">:</span><span class="pln"> completed thread id </span><span class="pun">:</span><span class="lit">0</span><span class="pln">  exiting </span><span class="kwd">with</span><span class="pln"> status </span><span class="pun">:</span><span class="lit">0</span><span class="pln">
</span><span class="typ">Main</span><span class="pun">:</span><span class="pln"> completed thread id </span><span class="pun">:</span><span class="lit">1</span><span class="pln">  exiting </span><span class="kwd">with</span><span class="pln"> status </span><span class="pun">:</span><span class="lit">0</span><span class="pln">
</span><span class="typ">Main</span><span class="pun">:</span><span class="pln"> completed thread id </span><span class="pun">:</span><span class="lit">2</span><span class="pln">  exiting </span><span class="kwd">with</span><span class="pln"> status </span><span class="pun">:</span><span class="lit">0</span><span class="pln">
</span><span class="typ">Main</span><span class="pun">:</span><span class="pln"> completed thread id </span><span class="pun">:</span><span class="lit">3</span><span class="pln">  exiting </span><span class="kwd">with</span><span class="pln"> status </span><span class="pun">:</span><span class="lit">0</span><span class="pln">
</span><span class="typ">Main</span><span class="pun">:</span><span class="pln"> completed thread id </span><span class="pun">:</span><span class="lit">4</span><span class="pln">  exiting </span><span class="kwd">with</span><span class="pln"> status </span><span class="pun">:</span><span class="lit">0</span><span class="pln">
</span><span class="typ">Main</span><span class="pun">:</span><span class="pln"> program exiting</span><span class="pun">.</span></pre>
<br>
<hr>
<div class="pre-btn">
<a href="http://www.tutorialspoint.com/cplusplus/cpp_signal_handling.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="http://www.tutorialspoint.com/cgi-bin/printpage.cgi" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="http://www.tutorialspoint.com/cplusplus/pdf/cpp_multithreading.pdf" alt="C++ Multithreading" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="http://www.tutorialspoint.com/cplusplus/cpp_web_programming.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr>
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="C++%20Multithreading_files/show_ads.js"></script><ins style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><ins id="aswift_1_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;" width="336" frameborder="0" height="280" scrolling="no"></iframe></ins></ins>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a href="#" title="Facebook" class="addthis_button_facebook at300b"><span class="at16nc at300bs at15nc at15t_facebook at16t_facebook"><span class="at_a11y">Share on facebook</span></span></a>
<a href="#" title="Tweet" class="addthis_button_twitter at300b"><span class="at16nc at300bs at15nc at15t_twitter at16t_twitter"><span class="at_a11y">Share on twitter</span></span></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script><a class="addthis_button_google_plusone at300b" g:plusone:count="false"><div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 24px; height: 15px;"><iframe title="+1" data-gapiattached="true" src="C++%20Multithreading_files/fastbutton.html" name="I0_1389171974934" id="I0_1389171974934" vspace="0" tabindex="0" style="position: static; top: 0px; width: 24px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" marginwidth="0" marginheight="0" hspace="0" width="100%" frameborder="0" scrolling="no"></iframe></div></a>
<a title="LinkedIn" target="_blank" href="http://www.addthis.com/bookmark.php?v=300&amp;winname=addthis&amp;pub=ra-4f661ec623a400f0&amp;source=tbx-300&amp;lng=en-US&amp;s=linkedin&amp;url=http%3A%2F%2Fwww.tutorialspoint.com%2Fcplusplus%2Fcpp_multithreading.htm&amp;title=C%2B%2B%20Multithreading&amp;ate=AT-ra-4f661ec623a400f0/-/-/52cd1503cfae5c38/2&amp;frommenu=1&amp;uid=52cd1503eea236d4&amp;ct=1&amp;pre=http%3A%2F%2Fwww.google.co.in%2Furl%3Fsa%3Dt%26rct%3Dj%26q%3D%26esrc%3Ds%26source%3Dweb%26cd%3D4%26ved%3D0CEQQFjAD%26url%3Dhttp%253A%252F%252Fwww.tutorialspoint.com%252Fcplusplus%252Fcpp_multithreading.htm%26ei%3DyRTNUom0E8aMrQfYsIGQCA%26usg%3DAFQjCNFZ2JWMY-hZS2kG_vIy3XUqK4aQ6Q%26bvm%3Dbv.59026428%2Cd.bmk%26cad%3Drja&amp;tt=0&amp;captcha_provider=nucaptcha" class="addthis_button_linkedin at300b"><span class="at16nc at300bs at15nc at15t_linkedin at16t_linkedin"><span class="at_a11y">Share on linkedin</span></span></a>
<a href="#" title="Email" target="_blank" class="addthis_button_email at300b"><span class="at16nc at300bs at15nc at15t_email at16t_email"><span class="at_a11y">Share on email</span></span></a>
<a href="#" class="addthis_button_compact at300m"><span class="at16nc at300bs at15nc at15t_compact at16t_compact"><span class="at_a11y">More Sharing Services</span></span></a>
<div class="atclear"></div></div>
<script type="text/javascript" src="C++%20Multithreading_files/addthis_widget.js"></script><div id="_atssh" style="visibility: hidden; height: 1px; width: 1px; position: absolute; z-index: 100000;"><iframe src="C++%20Multithreading_files/sh142.html" style="height: 1px; width: 1px; position: absolute; z-index: 100000; border: 0px none; left: 0px; top: 0px;" title="AddThis utility frame" id="_atssh953"></iframe></div><script src="C++%20Multithreading_files/core114.js" type="text/javascript"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript" src="C++%20Multithreading_files/show_ads.js"> 
</script><ins style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px;background-color:transparent"><ins id="aswift_2_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;" width="160" frameborder="0" height="600" scrolling="no"></iframe></ins></ins>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="http://www.tutorialspoint.com/asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="http://www.tutorialspoint.com/jquery/index.htm" target="_top">jQuery </a> |
<a href="http://www.tutorialspoint.com/ajax/index.htm" target="_top">AJAX </a> |
<a href="http://www.tutorialspoint.com/ant/index.htm" target="_top">ANT</a> |
<a href="http://www.tutorialspoint.com/jsp/index.htm" target="_top">JSP </a> |
<a href="http://www.tutorialspoint.com/servlets/index.htm" target="_top">Servlets </a> |
<a href="http://www.tutorialspoint.com/log4j/index.htm" target="_top">log4j </a> |
<a href="http://www.tutorialspoint.com/ibatis/index.htm" target="_top">iBATIS </a> |
<a href="http://www.tutorialspoint.com/hibernate/index.htm" target="_top">Hibernate </a> |
<a href="http://www.tutorialspoint.com/jdbc/index.htm" target="_top">JDBC </a> |
<a href="http://www.tutorialspoint.com/struts_2/index.htm" target="_top">Struts </a> |
<a href="http://www.tutorialspoint.com/html5/index.htm" target="_top">HTML5 </a> |
<a href="http://www.tutorialspoint.com/sql/index.htm" target="_top">SQL </a> |
<a href="http://www.tutorialspoint.com/mysql/index.htm" target="_top">MySQL </a> |
<a href="http://www.tutorialspoint.com/cplusplus/index.htm" target="_top">C++ </a> |
<a href="http://www.tutorialspoint.com/unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright © 2014 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>


<div style="display: none;" id="cboxOverlay"></div><div style="display: none;" tabindex="-1" role="dialog" class="" id="colorbox"><div id="cboxWrapper"><div><div style="float: left;" id="cboxTopLeft"></div><div style="float: left;" id="cboxTopCenter"></div><div style="float: left;" id="cboxTopRight"></div></div><div style="clear: left;"><div style="float: left;" id="cboxMiddleLeft"></div><div style="float: left;" id="cboxContent"><div style="float: left;" id="cboxTitle"></div><div style="float: left;" id="cboxCurrent"></div><button id="cboxPrevious" type="button"></button><button id="cboxNext" type="button"></button><button id="cboxSlideshow"></button><div style="float: left;" id="cboxLoadingOverlay"></div><div style="float: left;" id="cboxLoadingGraphic"></div></div><div style="float: left;" id="cboxMiddleRight"></div></div><div style="clear: left;"><div style="float: left;" id="cboxBottomLeft"></div><div style="float: left;" id="cboxBottomCenter"></div><div style="float: left;" id="cboxBottomRight"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div><div id="source" style="display:none;"></div><div id="supportsource" style="display:none;"></div><div id="utilsource" style="display:none;"></div><div id="extrasource" style="display:none;"></div><div id="inputs" style="display:none;"></div><div id="filename" style="display:none;"></div><iframe style="width: 1px; height: 1px; position: absolute; top: -100px;" src="C++%20Multithreading_files/postmessageRelay.html" id="oauth2relay629138106" name="oauth2relay629138106"></iframe></body></html>